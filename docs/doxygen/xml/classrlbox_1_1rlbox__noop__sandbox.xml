<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classrlbox_1_1rlbox__noop__sandbox" kind="class" language="C++" prot="public">
    <compoundname>rlbox::rlbox_noop_sandbox</compoundname>
    <includes refid="rlbox__noop__sandbox_8hpp" local="no">rlbox_noop_sandbox.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrlbox_1_1rlbox__noop__sandbox_1a54dfd9239da9ce4bdc48486ce03dfff6" prot="public" static="no">
        <type>long long</type>
        <definition>using rlbox::rlbox_noop_sandbox::T_LongLongType =  long long</definition>
        <argsstring></argsstring>
        <name>T_LongLongType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="48" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1rlbox__noop__sandbox_1a6510f0a0d24a8af6f8b1ff759f9c27b1" prot="public" static="no">
        <type>long</type>
        <definition>using rlbox::rlbox_noop_sandbox::T_LongType =  long</definition>
        <argsstring></argsstring>
        <name>T_LongType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="49" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1rlbox__noop__sandbox_1aad50443cb7733460ca536ffd553aad08" prot="public" static="no">
        <type>int</type>
        <definition>using rlbox::rlbox_noop_sandbox::T_IntType =  int</definition>
        <argsstring></argsstring>
        <name>T_IntType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="50" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1rlbox__noop__sandbox_1a003988855c4af67f8ab18b0f2579c44c" prot="public" static="no">
        <type>void *</type>
        <definition>using rlbox::rlbox_noop_sandbox::T_PointerType =  void*</definition>
        <argsstring></argsstring>
        <name>T_PointerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="51" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1rlbox__noop__sandbox_1a0bacaced018f138bf097b8e854c3ad5f" prot="public" static="no">
        <type>short</type>
        <definition>using rlbox::rlbox_noop_sandbox::T_ShortType =  short</definition>
        <argsstring></argsstring>
        <name>T_ShortType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="52" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1rlbox__noop__sandbox_1a562c4f14bfaed7999f0642caebf93262" prot="public" static="no">
        <type>void</type>
        <definition>using rlbox::rlbox_noop_sandbox::can_grant_deny_access =  void</definition>
        <argsstring></argsstring>
        <name>can_grant_deny_access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="55" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classrlbox_1_1rlbox__noop__sandbox_1abe0dfb0cde9dbc85eee3fc37cac7a6e5" prot="private" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t rlbox::rlbox_noop_sandbox::MAX_CALLBACKS</definition>
        <argsstring></argsstring>
        <name>MAX_CALLBACKS</name>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="59" column="32" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlbox_1_1rlbox__noop__sandbox_1a9048fa0b387162bb61d6aa8ee76205a1" prot="private" static="yes" mutable="no">
        <type>thread_local <ref refid="structrlbox_1_1rlbox__noop__sandbox__thread__data" kindref="compound">rlbox_noop_sandbox_thread_data</ref></type>
        <definition>thread_local rlbox_noop_sandbox_thread_data rlbox::rlbox_noop_sandbox::thread_data</definition>
        <argsstring></argsstring>
        <name>thread_data</name>
        <initializer>{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="64" column="61" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlbox_1_1rlbox__noop__sandbox_1a90051b6a6df7ba775ec917cd9cc8d029" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rlbox::rlbox_noop_sandbox::callback_unique_keys[MAX_CALLBACKS]</definition>
        <argsstring>[MAX_CALLBACKS]</argsstring>
        <name>callback_unique_keys</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="60" column="8" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlbox_1_1rlbox__noop__sandbox_1a9350bc978320601504c5ae747ba35596" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rlbox::rlbox_noop_sandbox::callbacks[MAX_CALLBACKS]</definition>
        <argsstring>[MAX_CALLBACKS]</argsstring>
        <name>callbacks</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="61" column="8" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1ab09ec04f405ba6165400ce736a592d2c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlbox::rlbox_noop_sandbox::RLBOX_SHARED_LOCK</definition>
        <argsstring>(callback_mutex)</argsstring>
        <name>RLBOX_SHARED_LOCK</name>
        <param>
          <type>callback_mutex</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="58" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1afc66f94f8c325ffde16953be83b47ece" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint32_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename T_Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T_Args</declname>
            <defname>T_Args</defname>
          </param>
        </templateparamlist>
        <type>T_Ret</type>
        <definition>static T_Ret rlbox::rlbox_noop_sandbox::callback_trampoline</definition>
        <argsstring>(T_Args... params)</argsstring>
        <name>callback_trampoline</name>
        <param>
          <type>T_Args...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="68" column="16" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="68" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1aed3d297784c5654e6d83d4c5d3dacd90" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlbox::rlbox_noop_sandbox::impl_create_sandbox</definition>
        <argsstring>()</argsstring>
        <name>impl_create_sandbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="89" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1af1693fb4ff2ac776671d10c2c5481d61" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlbox::rlbox_noop_sandbox::impl_destroy_sandbox</definition>
        <argsstring>()</argsstring>
        <name>impl_destroy_sandbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="91" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a16bc63ad756ef0089497a21ef1ad1b83" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>void * rlbox::rlbox_noop_sandbox::impl_get_unsandboxed_pointer</definition>
        <argsstring>(T_PointerType p) const</argsstring>
        <name>impl_get_unsandboxed_pointer</name>
        <param>
          <type>T_PointerType</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="94" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1acc83ff58dfef4a5a9c79a0e5b46fbec7" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T_PointerType</type>
        <definition>T_PointerType rlbox::rlbox_noop_sandbox::impl_get_sandboxed_pointer</definition>
        <argsstring>(const void *p) const</argsstring>
        <name>impl_get_sandboxed_pointer</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="100" column="24" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1ada393a58fd84c379715f1361df3a1c5d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T_PointerType</type>
        <definition>T_PointerType rlbox::rlbox_noop_sandbox::impl_malloc_in_sandbox</definition>
        <argsstring>(size_t size)</argsstring>
        <name>impl_malloc_in_sandbox</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="127" column="24" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a8722d866e0ebf476050dfa31cc30c2c4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rlbox::rlbox_noop_sandbox::impl_free_in_sandbox</definition>
        <argsstring>(T_PointerType p)</argsstring>
        <name>impl_free_in_sandbox</name>
        <param>
          <type>T_PointerType</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="133" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1ac2eacc65e2a7ab0ca01e1f9ba489422b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlbox::rlbox_noop_sandbox::impl_is_pointer_in_sandbox_memory</definition>
        <argsstring>(const void *)</argsstring>
        <name>impl_is_pointer_in_sandbox_memory</name>
        <param>
          <type>const void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="140" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a9c1e09e364ee2a9b0e4661664dfd0892" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlbox::rlbox_noop_sandbox::impl_is_pointer_in_app_memory</definition>
        <argsstring>(const void *)</argsstring>
        <name>impl_is_pointer_in_app_memory</name>
        <param>
          <type>const void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="141" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a5b0f5a989ec5b17cfe32ed469231ea16" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t rlbox::rlbox_noop_sandbox::impl_get_total_memory</definition>
        <argsstring>()</argsstring>
        <name>impl_get_total_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="143" column="17" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a6ce8b71f7c2e3085233348bb65e15468" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * rlbox::rlbox_noop_sandbox::impl_get_memory_location</definition>
        <argsstring>()</argsstring>
        <name>impl_get_memory_location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="148" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="148" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1aa315dcd1c55bfc522e179c41bcbe13ec" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>void * rlbox::rlbox_noop_sandbox::impl_lookup_symbol</definition>
        <argsstring>(const char *)</argsstring>
        <name>impl_lookup_symbol</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="160" column="8" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="160" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a0833932a29d618a1ab9d047e4a215657" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename T_Converted</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T_Args</declname>
            <defname>T_Args</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto rlbox::rlbox_noop_sandbox::impl_invoke_with_func_ptr</definition>
        <argsstring>(T_Converted *func_ptr, T_Args &amp;&amp;... params)</argsstring>
        <name>impl_invoke_with_func_ptr</name>
        <param>
          <type>T_Converted *</type>
          <declname>func_ptr</declname>
        </param>
        <param>
          <type>T_Args &amp;&amp;...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="178" column="8" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1ae787e181a8d293b115c0890e8036f03e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T_Args</declname>
            <defname>T_Args</defname>
          </param>
        </templateparamlist>
        <type>T_PointerType</type>
        <definition>T_PointerType rlbox::rlbox_noop_sandbox::impl_register_callback</definition>
        <argsstring>(void *key, void *callback)</argsstring>
        <name>impl_register_callback</name>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="188" column="24" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="188" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a2949f30bdc7cdc297042465818357ca0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Ret</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T_Args</declname>
            <defname>T_Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rlbox::rlbox_noop_sandbox::impl_unregister_callback</definition>
        <argsstring>(void *key)</argsstring>
        <name>impl_unregister_callback</name>
        <param>
          <type>void *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="221" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="221" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a3b78091b6445db7465d007898290f5c7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * rlbox::rlbox_noop_sandbox::impl_grant_access</definition>
        <argsstring>(T *src, size_t num, bool &amp;success)</argsstring>
        <name>impl_grant_access</name>
        <param>
          <type>T *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="234" column="12" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a0e924bc99248088c75086a39dd2728f9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * rlbox::rlbox_noop_sandbox::impl_deny_access</definition>
        <argsstring>(T *src, size_t num, bool &amp;success)</argsstring>
        <name>impl_deny_access</name>
        <param>
          <type>T *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="242" column="12" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="242" bodyend="247"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a01ba6efc2708824b457d11bcdee22a2e" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void *</type>
        <definition>static void * rlbox::rlbox_noop_sandbox::impl_get_unsandboxed_pointer_no_ctx</definition>
        <argsstring>(T_PointerType p, const void *, rlbox_noop_sandbox *(*)(const void *example_unsandboxed_ptr))</argsstring>
        <name>impl_get_unsandboxed_pointer_no_ctx</name>
        <param>
          <type>T_PointerType</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type><ref refid="classrlbox_1_1rlbox__noop__sandbox" kindref="compound">rlbox_noop_sandbox</ref> *</type>
          <array>*)(const void *example_unsandboxed_ptr</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="106" column="22" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="106" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a267c49ce62893a37fc138d7a26c30123" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T_PointerType</type>
        <definition>static T_PointerType rlbox::rlbox_noop_sandbox::impl_get_sandboxed_pointer_no_ctx</definition>
        <argsstring>(const void *p, const void *, rlbox_noop_sandbox *(*)(const void *example_unsandboxed_ptr))</argsstring>
        <name>impl_get_sandboxed_pointer_no_ctx</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type><ref refid="classrlbox_1_1rlbox__noop__sandbox" kindref="compound">rlbox_noop_sandbox</ref> *</type>
          <array>*)(const void *example_unsandboxed_ptr</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="117" column="31" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="117" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a5f720e5813f800fe573b028ce363760a" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rlbox::rlbox_noop_sandbox::impl_is_in_same_sandbox</definition>
        <argsstring>(const void *, const void *)</argsstring>
        <name>impl_is_in_same_sandbox</name>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="135" column="22" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1rlbox__noop__sandbox_1a9e031a5123074c1719bc212088626cf5" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classrlbox_1_1rlbox__noop__sandbox" kindref="compound">rlbox_noop_sandbox</ref> *, void * &gt;</type>
        <definition>static std::pair&lt; rlbox_noop_sandbox *, void * &gt; rlbox::rlbox_noop_sandbox::impl_get_executed_callback_sandbox_and_key</definition>
        <argsstring>()</argsstring>
        <name>impl_get_executed_callback_sandbox_and_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="209" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="209" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that implements the null sandbox. This sandbox doesn&apos;t actually provide any isolation and only serves as a stepping stone towards migrating an application to use the RLBox API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" line="44" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_noop_sandbox.hpp" bodystart="45" bodyend="248"/>
    <listofallmembers>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1afc66f94f8c325ffde16953be83b47ece" prot="private" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>callback_trampoline</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a90051b6a6df7ba775ec917cd9cc8d029" prot="private" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>callback_unique_keys</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a9350bc978320601504c5ae747ba35596" prot="private" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>callbacks</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a562c4f14bfaed7999f0642caebf93262" prot="public" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>can_grant_deny_access</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1aed3d297784c5654e6d83d4c5d3dacd90" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_create_sandbox</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a0e924bc99248088c75086a39dd2728f9" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_deny_access</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1af1693fb4ff2ac776671d10c2c5481d61" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_destroy_sandbox</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a8722d866e0ebf476050dfa31cc30c2c4" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_free_in_sandbox</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a9e031a5123074c1719bc212088626cf5" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_executed_callback_sandbox_and_key</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a6ce8b71f7c2e3085233348bb65e15468" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_memory_location</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1acc83ff58dfef4a5a9c79a0e5b46fbec7" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_sandboxed_pointer</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a267c49ce62893a37fc138d7a26c30123" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_sandboxed_pointer_no_ctx</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a5b0f5a989ec5b17cfe32ed469231ea16" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_total_memory</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a16bc63ad756ef0089497a21ef1ad1b83" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_unsandboxed_pointer</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a01ba6efc2708824b457d11bcdee22a2e" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_get_unsandboxed_pointer_no_ctx</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a3b78091b6445db7465d007898290f5c7" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_grant_access</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a0833932a29d618a1ab9d047e4a215657" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_invoke_with_func_ptr</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a5f720e5813f800fe573b028ce363760a" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_is_in_same_sandbox</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a9c1e09e364ee2a9b0e4661664dfd0892" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_is_pointer_in_app_memory</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1ac2eacc65e2a7ab0ca01e1f9ba489422b" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_is_pointer_in_sandbox_memory</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1aa315dcd1c55bfc522e179c41bcbe13ec" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_lookup_symbol</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1ada393a58fd84c379715f1361df3a1c5d" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_malloc_in_sandbox</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1ae787e181a8d293b115c0890e8036f03e" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_register_callback</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a2949f30bdc7cdc297042465818357ca0" prot="protected" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>impl_unregister_callback</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1abe0dfb0cde9dbc85eee3fc37cac7a6e5" prot="private" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>MAX_CALLBACKS</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1ab09ec04f405ba6165400ce736a592d2c" prot="private" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>RLBOX_SHARED_LOCK</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1aad50443cb7733460ca536ffd553aad08" prot="public" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>T_IntType</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a54dfd9239da9ce4bdc48486ce03dfff6" prot="public" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>T_LongLongType</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a6510f0a0d24a8af6f8b1ff759f9c27b1" prot="public" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>T_LongType</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a003988855c4af67f8ab18b0f2579c44c" prot="public" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>T_PointerType</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a0bacaced018f138bf097b8e854c3ad5f" prot="public" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>T_ShortType</name></member>
      <member refid="classrlbox_1_1rlbox__noop__sandbox_1a9048fa0b387162bb61d6aa8ee76205a1" prot="private" virt="non-virtual"><scope>rlbox::rlbox_noop_sandbox</scope><name>thread_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
