<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classrlbox_1_1tainted__volatile" kind="class" language="C++" prot="public">
    <compoundname>rlbox::tainted_volatile</compoundname>
    <basecompoundref refid="classrlbox_1_1tainted__base__impl" prot="public" virt="non-virtual">rlbox::tainted_base_impl&lt; tainted_volatile, T, T_Sbx &gt;</basecompoundref>
    <includes refid="rlbox_8hpp" local="no">rlbox.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename T_Sbx</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classrlbox_1_1tainted__volatile_1a38417c44fef0da56c85fa9a4311775eb" prot="private" static="no">
        <type><ref refid="classrlbox_1_1tainted__base__impl" kindref="compound">tainted_base_impl</ref>&lt; <ref refid="classrlbox_1_1tainted__volatile" kindref="compound">tainted_volatile</ref>, T, T_Sbx &gt;</type>
        <definition>using rlbox::tainted_volatile&lt; T, T_Sbx &gt;::T_ClassBase =  tainted_base_impl&lt;tainted_volatile, T, T_Sbx&gt;</definition>
        <argsstring></argsstring>
        <name>T_ClassBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1151" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1tainted__volatile_1ad3f518f65f46a0eb230c2164f8063cad" prot="private" static="no">
        <type>tainted_detail::tainted_repr_t&lt; T, T_Sbx &gt;</type>
        <definition>using rlbox::tainted_volatile&lt; T, T_Sbx &gt;::T_AppType =  tainted_detail::tainted_repr_t&lt;T, T_Sbx&gt;</definition>
        <argsstring></argsstring>
        <name>T_AppType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1152" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classrlbox_1_1tainted__volatile_1a2e1332828402955c9a282bf59e0ec3e2" prot="private" static="no">
        <type>tainted_detail::tainted_vol_repr_t&lt; T, T_Sbx &gt;</type>
        <definition>using rlbox::tainted_volatile&lt; T, T_Sbx &gt;::T_SandboxedType =  tainted_detail::tainted_vol_repr_t&lt;T, T_Sbx&gt;</definition>
        <argsstring></argsstring>
        <name>T_SandboxedType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1153" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlbox_1_1tainted__volatile_1a4eb4881830085932b268e0343603946e" prot="private" static="no" mutable="no">
        <type>KEEP_CLASSES_FRIENDLY</type>
        <definition>KEEP_CLASSES_FRIENDLY rlbox::tainted_volatile&lt; T, T_Sbx &gt;::KEEP_CAST_FRIENDLY</definition>
        <argsstring></argsstring>
        <name>KEEP_CAST_FRIENDLY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1136" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrlbox_1_1tainted__volatile_1a723bb32e9a24bf427eb3971c7565490e" prot="private" static="no" mutable="no">
        <type>T_SandboxedType</type>
        <definition>T_SandboxedType rlbox::tainted_volatile&lt; T, T_Sbx &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1154" column="19" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classrlbox_1_1tainted__volatile_1a41f8c034554f4dff986b2209bdc45b4e" prot="public" static="no" mutable="no">
        <type>rlbox_detail_forward_binop_to_base &amp;</type>
        <definition>rlbox_detail_forward_binop_to_base&amp; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::T_ClassBase</definition>
        <argsstring></argsstring>
        <name>T_ClassBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1228" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1a78d541779928e85464ab83271e607e15" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_sandbox_value_ref</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_sandbox_value_ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1156" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1156" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1aa884b7639f584dccdee9f77a6222179f" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_sandbox_value_ref</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_sandbox_value_ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1157" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1157" bodyend="1157"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1adcabf16d79b40dc119584c2c3577dd79" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::remove_cv_t&lt; T_AppType &gt;</type>
        <definition>std::remove_cv_t&lt; T_AppType &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_raw_value</definition>
        <argsstring>() const</argsstring>
        <name>get_raw_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1159" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1159" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1ab001d78b7657ffbe631de0fb27fb48b8" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::remove_cv_t&lt; T_SandboxedType &gt;</type>
        <definition>std::remove_cv_t&lt; T_SandboxedType &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_raw_sandbox_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_raw_sandbox_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1176" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1176" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1a037ffc190135d262d03ca09e7ae0faca" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::remove_cv_t&lt; T_SandboxedType &gt;</type>
        <definition>std::remove_cv_t&lt; T_SandboxedType &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_raw_sandbox_value</definition>
        <argsstring>(rlbox_sandbox&lt; T_Sbx &gt; &amp;sandbox) const noexcept</argsstring>
        <name>get_raw_sandbox_value</name>
        <param>
          <type><ref refid="classrlbox_1_1rlbox__sandbox" kindref="compound">rlbox_sandbox</ref>&lt; T_Sbx &gt; &amp;</type>
          <declname>sandbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1182" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1182" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1aba0b8a2a7797612e8d569c5ee5ccfdd8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::remove_cv_t&lt; T_AppType &gt;</type>
        <definition>std::remove_cv_t&lt; T_AppType &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_raw_value</definition>
        <argsstring>()</argsstring>
        <name>get_raw_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1189" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1189" bodyend="1192"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1ac80f9d29f2c9b59e952b562228e7c17c" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::remove_cv_t&lt; T_SandboxedType &gt;</type>
        <definition>std::remove_cv_t&lt; T_SandboxedType &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_raw_sandbox_value</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_raw_sandbox_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1194" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1194" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1a3bfd287ea9328bef9d96592f0fdb2c84" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::remove_cv_t&lt; T_SandboxedType &gt;</type>
        <definition>std::remove_cv_t&lt; T_SandboxedType &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::get_raw_sandbox_value</definition>
        <argsstring>(rlbox_sandbox&lt; T_Sbx &gt; &amp;sandbox) noexcept</argsstring>
        <name>get_raw_sandbox_value</name>
        <param>
          <type><ref refid="classrlbox_1_1rlbox__sandbox" kindref="compound">rlbox_sandbox</ref>&lt; T_Sbx &gt; &amp;</type>
          <declname>sandbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1200" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1200" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1ac46b15d6d3dec4ba09b889bad72f32ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlbox::tainted_volatile&lt; T, T_Sbx &gt;::tainted_volatile</definition>
        <argsstring>()=default</argsstring>
        <name>tainted_volatile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1208" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1ab08abd07301dd7698e4b28f70a111fbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlbox::tainted_volatile&lt; T, T_Sbx &gt;::tainted_volatile</definition>
        <argsstring>(const tainted_volatile&lt; T, T_Sbx &gt; &amp;p)=default</argsstring>
        <name>tainted_volatile</name>
        <param>
          <type>const <ref refid="classrlbox_1_1tainted__volatile" kindref="compound">tainted_volatile</ref>&lt; T, T_Sbx &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1209" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1a61b1e0ee594eed6ec4381fce99755ade" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classrlbox_1_1tainted" kindref="compound">tainted</ref>&lt; const T *, T_Sbx &gt;</type>
        <definition>tainted&lt; const T *, T_Sbx &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::operator&amp;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1212" column="18" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1212" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1af0d2d2f0375204940366a40ec85f6e2c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classrlbox_1_1tainted" kindref="compound">tainted</ref>&lt; T *, T_Sbx &gt;</type>
        <definition>tainted&lt; T *, T_Sbx &gt; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::operator&amp;</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1221" column="18" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1221" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1a563d677d3c13ebe32b4955777d13f568" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_RhsRef</type>
          </param>
        </templateparamlist>
        <type><ref refid="classrlbox_1_1tainted__volatile" kindref="compound">tainted_volatile</ref>&lt; T, T_Sbx &gt; &amp;</type>
        <definition>tainted_volatile&lt; T, T_Sbx &gt; &amp; rlbox::tainted_volatile&lt; T, T_Sbx &gt;::operator=</definition>
        <argsstring>(T_RhsRef &amp;&amp;val)</argsstring>
        <name>operator=</name>
        <param>
          <type>T_RhsRef &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1231" column="27" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1231" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1adc112be01be78aff6187e845e2e3ee5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Rhs</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void rlbox::tainted_volatile&lt; T, T_Sbx &gt;::assign_raw_pointer</definition>
        <argsstring>(rlbox_sandbox&lt; T_Sbx &gt; &amp;sandbox, T_Rhs val)</argsstring>
        <name>assign_raw_pointer</name>
        <param>
          <type><ref refid="classrlbox_1_1rlbox__sandbox" kindref="compound">rlbox_sandbox</ref>&lt; T_Sbx &gt; &amp;</type>
          <declname>sandbox</declname>
        </param>
        <param>
          <type>T_Rhs</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1341" column="8" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1341" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__volatile_1ad6b318608ffa3306c230b8043b33091d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Dummy</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>rlbox::tainted_volatile&lt; T, T_Sbx &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1372" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1372" bodyend="1385"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Tainted volatile values are like tainted values but still point to sandbox memory. Dereferencing a tainted pointer produces a <ref refid="classrlbox_1_1tainted__volatile" kindref="compound">tainted_volatile</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rlbox::tainted_volatile&lt; T, T_Sbx &gt;</label>
        <link refid="classrlbox_1_1tainted__volatile"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rlbox::tainted_base_impl&lt; tainted_volatile, T, T_Sbx &gt;</label>
        <link refid="classrlbox_1_1tainted__base__impl"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rlbox::tainted_volatile&lt; T, T_Sbx &gt;</label>
        <link refid="classrlbox_1_1tainted__volatile"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rlbox::tainted_base_impl&lt; tainted_volatile, T, T_Sbx &gt;</label>
        <link refid="classrlbox_1_1tainted__base__impl"/>
      </node>
    </collaborationgraph>
    <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" line="1130" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox.hpp" bodystart="1131" bodyend="1386"/>
    <listofallmembers>
      <member refid="classrlbox_1_1tainted__volatile_1adc112be01be78aff6187e845e2e3ee5f" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>assign_raw_pointer</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ac13751ef39495b930584164f841c540d" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BinaryOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a03f7e6cbb4ac6cc48b5f523c69863fee" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BinaryOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a100c45337a0ad48eb18ac977edb8cc48" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BinaryOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a19409368320571c2d44e5b41620fbe93" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BinaryOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ac11254da0346088f7e2ccfdccf87deb1" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BinaryOpValAndPtr</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ab64e73357c9a9387ca281d31e17bc490" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BinaryOpValAndPtr</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a950a68721c252366df818c0cbf4da4c6" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>BooleanBinaryOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a257ae6c0b4a0fe1b1639044a572a038b" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompareOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a3d04a736a337294fc02a13baef2d78db" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompareOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ac91498bde8eb4e3a384c666a65d5e7c0" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompareOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a2665ce9ccc644be5556c05fb26470468" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompareOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a461a58872313be13c882039a4d286145" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompareOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1af85745a199b95587d0d750439fae25bd" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompareOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a15ced8f568f8899e55b6354f620cbc7c" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompoundAssignmentOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a254df7254438c313621ff1a689dd5c34" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompoundAssignmentOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a80fe4331b06226cf5e5187cf806a36e5" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompoundAssignmentOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a695650ceddb22aee9f17b290e721dbd8" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompoundAssignmentOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ac234712a7d68b938c9c2f34bd4f96d73" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompoundAssignmentOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a9d9190fa8cfeadd75e5352a050b021d2" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>CompoundAssignmentOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a701759aedd637f48cc97a0e6ada1c8a6" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>copy_and_verify</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ad34419b3444d0bf37e25ecf7d37fbe0b" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>copy_and_verify_address</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a4f739a0994af23036cce2d06b10953ee" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>copy_and_verify_buffer_address</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a76e49089d448ba0cfa7ef6d7c1e2d288" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>copy_and_verify_range</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1aa377cc4d0ea6768ada5032234ac89aab" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>copy_and_verify_string</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a723bb32e9a24bf427eb3971c7565490e" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>data</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1ab001d78b7657ffbe631de0fb27fb48b8" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_raw_sandbox_value</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a037ffc190135d262d03ca09e7ae0faca" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_raw_sandbox_value</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1ac80f9d29f2c9b59e952b562228e7c17c" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_raw_sandbox_value</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a3bfd287ea9328bef9d96592f0fdb2c84" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_raw_sandbox_value</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1adcabf16d79b40dc119584c2c3577dd79" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_raw_value</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1aba0b8a2a7797612e8d569c5ee5ccfdd8" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_raw_value</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a78d541779928e85464ab83271e607e15" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_sandbox_value_ref</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1aa884b7639f584dccdee9f77a6222179f" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>get_sandbox_value_ref</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a66385fce7ba1bd883b74d887f1028917" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>impl</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1abf804eac041d98eff1686fcb03d0a73c" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>impl</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1afd3ea6da54b1556e0bdfd222df1ed2e9" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>INTERNAL_unverified_safe</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1aadcc0f6dc4114d5c9ebecff33040c3c7" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>INTERNAL_unverified_safe</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a4eb4881830085932b268e0343603946e" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>KEEP_CAST_FRIENDLY</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1ad6b318608ffa3306c230b8043b33091d" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator bool</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a05eaec33cccaad9bc15e014d6c25d695" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator!</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a61b1e0ee594eed6ec4381fce99755ade" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator&amp;</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1af0d2d2f0375204940366a40ec85f6e2c" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator&amp;</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a713a54b248f462704a77f0697d395e0c" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator*</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a4359f7609e90d48ea9d76d923f0baf7c" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator*</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a3e8fdb261d771cb7b5c9af33fe52ff35" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator-&gt;</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a52c2403f1851a0e2d295a712d8d10029" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator-&gt;</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a563d677d3c13ebe32b4955777d13f568" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator=</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a0867903c2ba81b50c85f142682ef1c0c" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator[]</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ae684874ca4a58d905b827bcd885a5877" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>operator[]</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a2ccdf93dd8466df3985c4f7c9225af08" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>PostIncDecOps</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a091f18be8cd32b34bec75322364e1f1d" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>PostIncDecOps</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a6c8dca7aef6cbf28dec6cba42963e76a" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>PreIncDecOps</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ab9decc76ea24942932c7288d2ee257c3" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>PreIncDecOps</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ac7d2f71a8fc72b922bfa1260d4a7ac94" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>rlbox_detail_member_and_const</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1af9767a70f0e97d74c5d70a6511cff5d1" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>rlbox_detail_member_and_const</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1ad3f518f65f46a0eb230c2164f8063cad" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>T_AppType</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a38417c44fef0da56c85fa9a4311775eb" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>T_ClassBase</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a41f8c034554f4dff986b2209bdc45b4e" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>T_ClassBase</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1a2e1332828402955c9a282bf59e0ec3e2" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>T_SandboxedType</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1ac46b15d6d3dec4ba09b889bad72f32ff" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>tainted_volatile</name></member>
      <member refid="classrlbox_1_1tainted__volatile_1ab08abd07301dd7698e4b28f70a111fbc" prot="private" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>tainted_volatile</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ac450c85ec8fa3c5046bcf3fb7aeca2d1" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>UnaryOp</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1ae2c69129cbb9344e7d2623129f031214" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>UNSAFE_sandboxed</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a2fb81eab8dc3839f351d6d89410c2350" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>UNSAFE_sandboxed</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a01acab6b4bd8137afa03cf4b2678844f" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>UNSAFE_unverified</name></member>
      <member refid="classrlbox_1_1tainted__base__impl_1a41f8eed43072bf173cce34cd3351191e" prot="public" virt="non-virtual"><scope>rlbox::tainted_volatile</scope><name>UNSAFE_unverified</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
