<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacerlbox_1_1detail_1_1polyfill" kind="namespace" language="C++">
    <compoundname>rlbox::detail::polyfill</compoundname>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1____nat" prot="public">rlbox::detail::polyfill::__nat</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1____nothrow__invokable__r__imp" prot="public">rlbox::detail::polyfill::__nothrow_invokable_r_imp</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1____nothrow__invokable__r__imp_3_01true_00_01false_00_01__R20797f25b6d2c31e27d840915001dc22" prot="public">rlbox::detail::polyfill::__nothrow_invokable_r_imp&lt; true, false, _Ret, _Fp, _Args... &gt;</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1____nothrow__invokable__r__imp_3_01true_00_01true_00_01__Re94b011956b38a71c476d923b84fea4ba" prot="public">rlbox::detail::polyfill::__nothrow_invokable_r_imp&lt; true, true, _Ret, _Fp, _Args... &gt;</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1helper____invoke__of" prot="public">rlbox::detail::polyfill::helper__invoke_of</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1invoke__result" prot="public">rlbox::detail::polyfill::invoke_result</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1is__invocable" prot="public">rlbox::detail::polyfill::is_invocable</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1is__invocable__r" prot="public">rlbox::detail::polyfill::is_invocable_r</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1is__nothrow__invocable" prot="public">rlbox::detail::polyfill::is_nothrow_invocable</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1polyfill_1_1is__nothrow__invocable__r" prot="public">rlbox::detail::polyfill::is_nothrow_invocable_r</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rlbox__stdlib__polyfill_8hpp_1a7b59a943b2c1f511d46d86e10716749e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>_Val</declname>
            <defname>_Val</defname>
          </param>
        </templateparamlist>
        <type>std::integral_constant&lt; bool, _Val &gt;</type>
        <definition>using rlbox::detail::polyfill::_BoolConstant = typedef std::integral_constant&lt;bool, _Val&gt;</definition>
        <argsstring></argsstring>
        <name>_BoolConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="31" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rlbox__stdlib__polyfill_8hpp_1aa2fb4bcc83d123819d1d4c80e707a1ae" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class _Tp</type>
          </param>
          <param>
            <type>class _Up</type>
          </param>
        </templateparamlist>
        <type>_BoolConstant&lt;!std::is_same&lt; _Tp, _Up &gt;::value &gt;</type>
        <definition>using rlbox::detail::polyfill::_IsNotSame = typedef _BoolConstant&lt;!std::is_same&lt;_Tp, _Up&gt;::value&gt;</definition>
        <argsstring></argsstring>
        <name>_IsNotSame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="34" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rlbox__stdlib__polyfill_8hpp_1ae4d3b1827587f905d3f5c7d8ea76e0f0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class _Fp</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>(_Fp &amp;&amp;__f, _Args &amp;&amp;... __args) INVOKE_RETURN(std __invokable_r&lt; void, _Fp, _Args... &gt;</type>
        <definition>using rlbox::detail::polyfill::__invokable = typedef (_Fp&amp;&amp; __f, _Args&amp;&amp;... __args) INVOKE_RETURN(std __invokable_r&lt;void, _Fp, _Args...&gt;</definition>
        <argsstring></argsstring>
        <name>__invokable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="73" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rlbox__stdlib__polyfill_8hpp_1a915346fa52c9639dbd81c4b425f96ae4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class _Ret</type>
          </param>
          <param>
            <type>class _Fp</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structrlbox_1_1detail_1_1polyfill_1_1____nothrow__invokable__r__imp" kindref="compound">__nothrow_invokable_r_imp</ref>&lt; __invokable_r&lt; _Ret, _Fp, _Args... &gt;::value, std::is_void&lt; _Ret &gt;::value, _Ret, _Fp, _Args... &gt;</type>
        <definition>using rlbox::detail::polyfill::__nothrow_invokable_r = typedef __nothrow_invokable_r_imp&lt;__invokable_r&lt;_Ret, _Fp, _Args...&gt;::value, std::is_void&lt;_Ret&gt;::value, _Ret, _Fp, _Args...&gt;</definition>
        <argsstring></argsstring>
        <name>__nothrow_invokable_r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="105" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rlbox__stdlib__polyfill_8hpp_1ae6863aa73ea15bd1a0bcf596f66f0991" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class _Fp</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structrlbox_1_1detail_1_1polyfill_1_1____nothrow__invokable__r__imp" kindref="compound">__nothrow_invokable_r_imp</ref>&lt; __invokable&lt; _Fp, _Args... &gt;::value, true, void, _Fp, _Args... &gt;</type>
        <definition>using rlbox::detail::polyfill::__nothrow_invokable = typedef __nothrow_invokable_r_imp&lt;__invokable&lt;_Fp, _Args...&gt;::value, true, void, _Fp, _Args...&gt;</definition>
        <argsstring></argsstring>
        <name>__nothrow_invokable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="113" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rlbox__stdlib__polyfill_8hpp_1acb975d6d9b0d47d0f1bb0dee345ea621" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class _Fn</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structrlbox_1_1detail_1_1polyfill_1_1invoke__result" kindref="compound">invoke_result</ref>&lt; _Fn, _Args... &gt;::type</type>
        <definition>using rlbox::detail::polyfill::invoke_result_t = typedef typename invoke_result&lt;_Fn, _Args...&gt;::type</definition>
        <argsstring></argsstring>
        <name>invoke_result_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="133" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rlbox__stdlib__polyfill_8hpp_1a901727016c1ff28b6c04f628a2cf810a" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class _Fn</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rlbox::detail::polyfill::is_invocable_v</definition>
        <argsstring></argsstring>
        <name>is_invocable_v</name>
        <initializer>= <ref refid="structrlbox_1_1detail_1_1polyfill_1_1is__invocable" kindref="compound">is_invocable</ref>&lt;_Fn, _Args...&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="148" column="23" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rlbox__stdlib__polyfill_8hpp_1ae8d2106cf1c9ffcd88ac7a19b69abc1b" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class _Ret</type>
          </param>
          <param>
            <type>class _Fn</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rlbox::detail::polyfill::is_invocable_r_v</definition>
        <argsstring></argsstring>
        <name>is_invocable_r_v</name>
        <initializer>=
  <ref refid="structrlbox_1_1detail_1_1polyfill_1_1is__invocable__r" kindref="compound">is_invocable_r</ref>&lt;_Ret, _Fn, _Args...&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="151" column="23" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rlbox__stdlib__polyfill_8hpp_1aa2a16ed95ebcee2d1f9a8bc4eae3a13b" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class _Fn</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rlbox::detail::polyfill::is_nothrow_invocable_v</definition>
        <argsstring></argsstring>
        <name>is_nothrow_invocable_v</name>
        <initializer>=
  <ref refid="structrlbox_1_1detail_1_1polyfill_1_1is__nothrow__invocable" kindref="compound">is_nothrow_invocable</ref>&lt;_Fn, _Args...&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="168" column="23" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="rlbox__stdlib__polyfill_8hpp_1a36c4bc16c1ee2d1132d67efc15f7b030" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>class _Ret</type>
          </param>
          <param>
            <type>class _Fn</type>
          </param>
          <param>
            <type>class...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rlbox::detail::polyfill::is_nothrow_invocable_r_v</definition>
        <argsstring></argsstring>
        <name>is_nothrow_invocable_r_v</name>
        <initializer>=
  <ref refid="structrlbox_1_1detail_1_1polyfill_1_1is__nothrow__invocable__r" kindref="compound">is_nothrow_invocable_r</ref>&lt;_Ret, _Fn, _Args...&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="172" column="23" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_stdlib_polyfill.hpp" line="20" column="1"/>
  </compounddef>
</doxygen>
