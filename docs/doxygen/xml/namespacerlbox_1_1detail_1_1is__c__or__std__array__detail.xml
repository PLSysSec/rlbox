<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacerlbox_1_1detail_1_1is__c__or__std__array__detail" kind="namespace" language="C++">
    <compoundname>rlbox::detail::is_c_or_std_array_detail</compoundname>
    <innerclass refid="structrlbox_1_1detail_1_1is__c__or__std__array__detail_1_1is__c__or__std__array__helper" prot="public">rlbox::detail::is_c_or_std_array_detail::is_c_or_std_array_helper</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1is__c__or__std__array__detail_1_1is__c__or__std__array__helper_3_01T_00f7133443f751f75ceb0fc3a4cd3f63ff" prot="public">rlbox::detail::is_c_or_std_array_detail::is_c_or_std_array_helper&lt; T, std::enable_if_t&lt; is_std_array_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1is__c__or__std__array__detail_1_1is__c__or__std__array__helper_3_01T_00e23e81f699b5338ffda7a4814dc1a20e" prot="public">rlbox::detail::is_c_or_std_array_detail::is_c_or_std_array_helper&lt; T, std::enable_if_t&lt; std::is_array_v&lt; T &gt; &gt; &gt;</innerclass>
    <innerclass refid="structrlbox_1_1detail_1_1is__c__or__std__array__detail_1_1is__c__or__std__array__helper_3_01T_006917f5978f5075d5dadfc94abedf439f" prot="public">rlbox::detail::is_c_or_std_array_detail::is_c_or_std_array_helper&lt; T, std::enable_if_t&lt;!std::is_array_v&lt; T &gt; &amp;&amp;!is_std_array_v&lt; T &gt; &gt; &gt;</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rlbox__type__traits_8hpp_1a8491a4b9f71cfd7500e9bde8b8e35e94" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool rlbox::detail::is_c_or_std_array_detail::is_std_array_v</definition>
        <argsstring></argsstring>
        <name>is_std_array_v</name>
        <initializer>=
    decltype(is_std_array_helper(std::declval&lt;std::add_pointer_t&lt;T&gt;&gt;()))::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" line="160" column="18" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rlbox__type__traits_8hpp_1aa0c772106526e6c605f3f1c111dcf1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::true_type</type>
        <definition>std::true_type rlbox::detail::is_c_or_std_array_detail::is_std_array_helper</definition>
        <argsstring>(std::array&lt; T, N &gt; *)</argsstring>
        <name>is_std_array_helper</name>
        <param>
          <type>std::array&lt; T, N &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" line="154" column="18" declfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" declline="154" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="rlbox__type__traits_8hpp_1af6fde81b57a8b08a0fa043ffb80a0606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>std::false_type rlbox::detail::is_c_or_std_array_detail::is_std_array_helper</definition>
        <argsstring>(T *)</argsstring>
        <name>is_std_array_helper</name>
        <param>
          <type>T *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" line="157" column="19" declfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" declline="157" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_type_traits.hpp" line="144" column="1"/>
  </compounddef>
</doxygen>
