<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classrlbox_1_1tainted__boolean__hint" kind="class" language="C++" prot="public">
    <compoundname>rlbox::tainted_boolean_hint</compoundname>
    <includes refid="rlbox__policy__types_8hpp" local="no">rlbox_policy_types.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrlbox_1_1tainted__boolean__hint_1ac56b1b2bb81216a563c6a65287c8b93d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rlbox::tainted_boolean_hint::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="303" column="8" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1a14cea878f2d1cbf8722491cc0abe875f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rlbox::tainted_boolean_hint::tainted_boolean_hint</definition>
        <argsstring>(bool init)</argsstring>
        <name>tainted_boolean_hint</name>
        <param>
          <type>bool</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="306" column="3" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1adea514e39039a1278dc00b59ec911ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rlbox::tainted_boolean_hint::tainted_boolean_hint</definition>
        <argsstring>(const tainted_boolean_hint &amp;)=default</argsstring>
        <name>tainted_boolean_hint</name>
        <param>
          <type>const <ref refid="classrlbox_1_1tainted__boolean__hint" kindref="compound">tainted_boolean_hint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="309" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1a5e291fd3590243b2f581fc77df8c1415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrlbox_1_1tainted__boolean__hint" kindref="compound">tainted_boolean_hint</ref> &amp;</type>
        <definition>tainted_boolean_hint &amp; rlbox::tainted_boolean_hint::operator=</definition>
        <argsstring>(bool rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>bool</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="310" column="31" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1ae47718163139bbc69009f5d853700690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrlbox_1_1tainted__boolean__hint" kindref="compound">tainted_boolean_hint</ref></type>
        <definition>tainted_boolean_hint rlbox::tainted_boolean_hint::operator!</definition>
        <argsstring>()</argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="315" column="31" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1abf39ef53dfd6b06017c127ef9370bb19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool rlbox::tainted_boolean_hint::unverified_safe_because</definition>
        <argsstring>(const char(&amp;reason)[N]) const</argsstring>
        <name>unverified_safe_because</name>
        <param>
          <type>const char(&amp;)</type>
          <declname>reason</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="317" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="317" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1a6e23142c021bb326ab1d6d700a493b6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlbox::tainted_boolean_hint::UNSAFE_unverified</definition>
        <argsstring>() const</argsstring>
        <name>UNSAFE_unverified</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="322" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1a5bcd23163c04db9f85ee68a6e06ab57e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool rlbox::tainted_boolean_hint::UNSAFE_unverified</definition>
        <argsstring>()</argsstring>
        <name>UNSAFE_unverified</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="323" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1aa686dad271f4d9ed7e908d38313706d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto rlbox::tainted_boolean_hint::INTERNAL_unverified_safe</definition>
        <argsstring>()</argsstring>
        <name>INTERNAL_unverified_safe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="324" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1a6e329c5d66230f3d7af46482c84ba3a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto rlbox::tainted_boolean_hint::INTERNAL_unverified_safe</definition>
        <argsstring>() const</argsstring>
        <name>INTERNAL_unverified_safe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="325" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classrlbox_1_1tainted__boolean__hint_1a4b895e5d6728b24462d5baf0c5fa4664" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>void</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool rlbox::tainted_boolean_hint::copy_and_verify</definition>
        <argsstring>(...) const</argsstring>
        <name>copy_and_verify</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="329" column="15" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="329" bodyend="349"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Tainted boolean value that serves as a &quot;hint&quot; and not a definite answer. Comparisons with a <ref refid="classrlbox_1_1tainted__volatile" kindref="compound">tainted_volatile</ref> return such hints. They are not <computeroutput>tainted&lt;bool&gt;</computeroutput> values because a compromised sandbox can modify <ref refid="classrlbox_1_1tainted__volatile" kindref="compound">tainted_volatile</ref> data at any time. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" line="300" column="1" bodyfile="/home/d/hack/rlbox_sandboxing_api/code/include/rlbox_policy_types.hpp" bodystart="301" bodyend="350"/>
    <listofallmembers>
      <member refid="classrlbox_1_1tainted__boolean__hint_1a4b895e5d6728b24462d5baf0c5fa4664" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>copy_and_verify</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1aa686dad271f4d9ed7e908d38313706d5" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>INTERNAL_unverified_safe</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1a6e329c5d66230f3d7af46482c84ba3a4" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>INTERNAL_unverified_safe</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1ae47718163139bbc69009f5d853700690" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>operator!</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1a5e291fd3590243b2f581fc77df8c1415" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>operator=</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1a14cea878f2d1cbf8722491cc0abe875f" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>tainted_boolean_hint</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1adea514e39039a1278dc00b59ec911ce2" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>tainted_boolean_hint</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1a6e23142c021bb326ab1d6d700a493b6f" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>UNSAFE_unverified</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1a5bcd23163c04db9f85ee68a6e06ab57e" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>UNSAFE_unverified</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1abf39ef53dfd6b06017c127ef9370bb19" prot="public" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>unverified_safe_because</name></member>
      <member refid="classrlbox_1_1tainted__boolean__hint_1ac56b1b2bb81216a563c6a65287c8b93d" prot="private" virt="non-virtual"><scope>rlbox::tainted_boolean_hint</scope><name>val</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
